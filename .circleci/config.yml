version: 2
jobs:
  build:
    docker:
      - image: docker:17.03-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.03.0-ce
          docker_layer_caching: true
  python_unit_test:
    docker:
      - image: circleci/python:2.7
        environment:
          DJANGO_SETTINGS_MODULE: cla_frontend.settings.testing
    steps:
      - checkout
      - run:
          name: Setup Python environment
          command: |
            pip install virtualenv
            virtualenv env-ci
      - restore_cache:
          keys:
            - pip-v1-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/testing.txt" }}
      - run:
          name: Install dependencies
          command: |
            source env-ci/bin/activate
            pip install --requirement requirements/testing.txt
      - save_cache:
          key: pip-v1-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/testing.txt" }}
          paths:
            - "~/.cache/pip"
      - run:
          name: Run unit tests
          command: |
            source env-ci/bin/activate
            python manage.py test --verbosity=2
  javascript_unit_test:
    docker:
      - image: circleci/node:8.9.3
        environment:
          DJANGO_SETTINGS_MODULE: cla_frontend.settings.test
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package-lock.json" }}
      - run:
          name: Install Node JS dependencies
          command: |
            npm install
      - save_cache:
          key: node-v1-{{ checksum "package-lock.json" }}
          paths:
            - "./node_modules"
      - restore_cache:
          keys:
            - bower-v1-{{ checksum "bower.json" }}
      - run:
          name: Install Bower dependencies
          command: |
            npm run bower
      - save_cache:
          key: bower-v1-{{ checksum "bower.json" }}
          paths:
            - "./cla_frontend/assets-src/vendor"
      - run:
          name: Bundle JavaScript 
          command: |
            npm run js
      - run:
          name: Run Jasmine unit tests
          command: |
            npm run test-single-run

workflows:
  version: 2
  test_and_build:
    jobs:
      - python_unit_test
      - javascript_unit_test
      - build:
          requires:
            - python_unit_test
            - javascript_unit_test
